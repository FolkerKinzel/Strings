<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>StringBuilderExtension Class</title><meta name="Title" content="StringBuilderExtension" /><meta name="Help.Id" content="T:FolkerKinzel.Strings.StringBuilderExtension" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.Strings" /><meta name="guid" content="27f9733e-062e-3a8a-e039-f7505ff4a5b5" /><meta name="Description" content="Extension methods for the class." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.Strings</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>String<wbr />Builder<wbr />Extension Class</h1><div class="summary">Extension methods for the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> class.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="776eae5c-b107-6615-5a5e-d18a3bcc0b99.htm">FolkerKinzel.Strings</a><br /><strong>Assembly:</strong> FolkerKinzel.Strings (in FolkerKinzel.Strings.dll) Version: 9.2.2+cde59bb292b122ca0b07018faa883505fafe0ce7<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">StringBuilderExtension</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">StringBuilderExtension</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">StringBuilderExtension</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">StringBuilderExtension</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">StringBuilderExtension</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDHEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="960186ab-0fee-7c70-d6c4-4bfd7a7c62ad.htm">AppendBase64(StringBuilder, <span id="LST997E13E1_0" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST997E13E1_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Base64FormattingOptions)</a></td><td>Appends the content of a <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> array as Base64-encoded character
            sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="d380346d-21a2-2c5c-8cdf-78f635f73a82.htm">AppendBase64(StringBuilder, IEnumerable<span id="LST997E13E1_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST997E13E1_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Base64FormattingOptions)</a></td><td>Appends the content of a <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> collection as Base64-encoded
            character sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="911577ad-f6df-a087-6baa-abb309475ca4.htm">AppendBase64(StringBuilder, ReadOnlySpan<span id="LST997E13E1_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST997E13E1_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Base64FormattingOptions)</a></td><td>Appends the content of a read-only <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> span as Base64-encoded
            character sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="07a0b745-b734-7914-43c5-d6264d42cd34.htm">AppendLine(StringBuilder, ReadOnlyMemory<span id="LST997E13E1_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Appends a copy of the specified read-only character memory region followed
            by the standard line terminator to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> object.</td></tr><tr><td><a href="89f4eff0-2f24-163e-8073-c727243316cc.htm">AppendLine(StringBuilder, ReadOnlySpan<span id="LST997E13E1_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Appends a copy of the specified read-only character span followed by the
            standard line terminator to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> object.</td></tr><tr><td><a href="632c046d-c3ee-1920-da85-222b7278852f.htm">AppendUrlEncoded(StringBuilder, <span id="LST997E13E1_10" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST997E13E1_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Appends the content of a <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> array as URL-encoded character
            sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="6a9b6116-511f-86ae-ae6a-1b01447622d4.htm">AppendUrlEncoded(StringBuilder, IEnumerable<span id="LST997E13E1_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST997E13E1_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Appends the content of a <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> collection as URL-encoded character
            sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="87a33d69-6d3f-90d4-af9e-4fecf33ffb6e.htm">AppendUrlEncoded(StringBuilder, ReadOnlySpan<span id="LST997E13E1_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST997E13E1_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Appends the content of a read-only <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noopener noreferrer">Byte</a> span as URL-encoded
            character sequence to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="76d49b93-360e-9663-4e0f-0c2e1d1b6256.htm">AppendUrlEncoded(StringBuilder, ReadOnlySpan<span id="LST997E13E1_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Appends the content of a read-only character span as URL-encoded string
            to the end of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="69fb848d-54a0-61e6-f7a2-2159b801d9f0.htm">Contains(StringBuilder, Char)</a></td><td>Indicates whether a specified Unicode character is found in a 
            <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="9f60f3db-7e23-d4ff-148a-fa469e673bd9.htm">Contains(StringBuilder, Char, Int32)</a></td><td>Indicates whether a specified Unicode character is found in a 
            <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>. The search starts at the specified index.</td></tr><tr><td><a href="624d3dd1-dc4c-3243-6964-9a0e1004ce8e.htm">Contains(StringBuilder, Char, Int32, Int32)</a></td><td>Indicates whether a specified Unicode character is found in a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>. The search begins at a specified index and a specified number of character positions
            are checked.</td></tr><tr><td><a href="59c33ede-ac47-6533-a5af-08177a608311.htm">ContainsNewLine(StringBuilder)</a></td><td>Indicates whether the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> contains a newline character.</td></tr><tr><td><a href="adf1de07-4ca1-8648-34ce-251faa2dbfd5.htm">ContainsNewLine(StringBuilder, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> to see whether it contains a newline character.</td></tr><tr><td><a href="8178cc60-d77c-c774-4482-def9de96e3bd.htm">ContainsNewLine(StringBuilder, Int32, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> and includes <span class="parameter">count</span> characters to determine
            whether this section contains a newline character.</td></tr><tr><td><a href="73caf025-df55-1ce1-8d8a-c579b606a6e7.htm">ContainsNonAscii(StringBuilder)</a></td><td>Indicates whether the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> contains Unicode characters
            that do not belong to the ASCII character set.</td></tr><tr><td><a href="ba738b7f-8361-818c-e1a4-71b13b4fa9bf.htm">ContainsNonAscii(StringBuilder, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> to see whether it contains Unicode characters that do not belong
            to the ASCII character set .</td></tr><tr><td><a href="cabca121-8f5b-e4ae-55a4-d460de855df2.htm">ContainsNonAscii(StringBuilder, Int32, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> and includes <span class="parameter">count</span> characters to determine
            whether this section contains Unicode characters that do not belong to the ASCII
            character set.</td></tr><tr><td><a href="34376e19-6d75-3f05-4a42-87d0fb02bc32.htm">ContainsWhiteSpace(StringBuilder)</a></td><td>Indicates whether the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> contains white space.</td></tr><tr><td><a href="ae9c9146-5b64-48b3-fb02-c663d5dd44a6.htm">ContainsWhiteSpace(StringBuilder, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> to see whether it contains white space.</td></tr><tr><td><a href="8a804273-165a-24e6-f664-b5f03a85cd8d.htm">ContainsWhiteSpace(StringBuilder, Int32, Int32)</a></td><td>Examines a section of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins at <span class="parameter">startIndex</span> and includes <span class="parameter">count</span> characters to determine
            whether this section contains white space.</td></tr><tr><td><a href="b7d96f92-2668-c196-644a-149b727293b9.htm">EndsWith</a></td><td>Indicates whether the specified Unicode character matches the end of the
            <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="6943be19-9b30-6443-64a3-c434b7efd362.htm">GetPersistentHashCode</a></td><td>Generates the same <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a> hash code for an identical string
            of characters each time the program is run.</td></tr><tr><td><a href="09893062-208e-18e3-122d-5ddb754a7a27.htm">IndexOf(StringBuilder, Char)</a></td><td>Specifies the zero-based index of the first occurrence of the specified
            character in <span class="parameter">builder</span>.</td></tr><tr><td><a href="a0cabe8d-e587-838f-c6f9-e9e861583d91.htm">IndexOf(StringBuilder, Char, Int32)</a></td><td>Returns the zero-based index of the first occurrence of the specified character
            in <span class="parameter">builder</span>. The search starts at the specified index.</td></tr><tr><td><a href="c3de8de0-049f-95fe-b8e6-bf9b6afb45b5.htm">IndexOf(StringBuilder, Char, Int32, Int32)</a></td><td>Returns the zero-based index of the first occurrence of the specified character
            in <span class="parameter">builder</span>. The search begins at a specified index and a specified
            number of character positions are checked.</td></tr><tr><td><a href="cbd45b28-6e3f-8b6a-007e-e29e5caf247a.htm">LastIndexOf(StringBuilder, Char)</a></td><td>Returns the zero-based index of the last occurrence of the specified character
            in <span class="parameter">builder</span>.</td></tr><tr><td><a href="de0e4fd6-973c-39c5-fbb4-66bf0c55e338.htm">LastIndexOf(StringBuilder, Char, Int32)</a></td><td>Returns the zero-based index of the last occurrence of the specified character
            in <span class="parameter">builder</span>. The search begins at a specified character position
            and runs backwards to the beginning of the <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="b3f910cb-45ee-9ad8-d901-2be39733464d.htm">LastIndexOf(StringBuilder, Char, Int32, Int32)</a></td><td>Specifies the zero-based index of the last occurrence of the specified character
            in <span class="parameter">builder</span>. The search begins at a specified index and runs backwards
            for a specified number of character positions to the beginning of the 
            <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.</td></tr><tr><td><a href="aae9ad66-b89f-7cc1-8f91-9fcf432698a1.htm">Replace(StringBuilder, Char, Char, Int32)</a></td><td>Replaces, within a substring of <span class="parameter">builder</span>, all occurrences
            of a specified character with another specified character.</td></tr><tr><td><a href="97ea7cdf-147a-7c7d-c1f7-9756ecddfe6b.htm">Replace(StringBuilder, String, String, Int32)</a></td><td>Replaces all occurrences of a specified string in a substring of <span class="parameter">builder</span> with another specified string.</td></tr><tr><td><a href="9d53fa88-e6e8-ad76-d25c-1dbc890be7fc.htm">ReplaceLineEndings</a></td><td>Replaces all newlines in <span class="parameter">builder</span> with 
            <span class="parameter">replacementText</span>.</td></tr><tr><td><a href="1c5dbdf4-b85e-700d-4d60-c0e8ff90d734.htm">ReplaceWhiteSpaceWith(StringBuilder, ReadOnlySpan<span id="LST997E13E1_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Boolean)</a></td><td>Replaces in <span class="parameter">builder</span> all sequences of white space with
            <span class="parameter">replacement</span>.</td></tr><tr><td><a href="dae31c0f-b317-f337-36a9-e64907c624eb.htm">ReplaceWhiteSpaceWith(StringBuilder, ReadOnlySpan<span id="LST997E13E1_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Boolean)</a></td><td>Replaces in a section of <span class="parameter">builder</span>, which starts at <span class="parameter">startIndex</span> and extends to the end of <span class="parameter">builder</span>, all sequences
            of white space with <span class="parameter">replacement</span>.</td></tr><tr><td><a href="6adc0e38-bd4b-95fe-6b6d-ef15f33abc07.htm">ReplaceWhiteSpaceWith(StringBuilder, ReadOnlySpan<span id="LST997E13E1_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32, Boolean)</a></td><td>Replaces in a section of <span class="parameter">builder</span>, which starts at <span class="parameter">startIndex</span> and which is <span class="parameter">count</span> characters long, all
            sequences of white space with <span class="parameter">replacement</span>.</td></tr><tr><td><a href="0149b10f-e996-cca0-9151-9ef83f74ed80.htm">StartsWith</a></td><td>Indicates whether the specified Unicode character matches the beginning
            of <span class="parameter">builder</span>.</td></tr><tr><td><a href="03ba0caf-aa74-3eee-f8c5-fe0554480ec7.htm">ToLowerInvariant(StringBuilder)</a></td><td>Converts the entire content of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> to lowercase
            letters using the rules of the invariant culture.</td></tr><tr><td><a href="c4c64139-7c4b-6fcf-70ac-a572c8731cdc.htm">ToLowerInvariant(StringBuilder, Int32)</a></td><td>Converts the content of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> starting with <span class="parameter">startIndex</span> into lowercase letters and uses the rules of the invariant culture.</td></tr><tr><td><a href="a68514c8-5013-fb5d-42c5-168062189b96.htm">ToLowerInvariant(StringBuilder, Int32, Int32)</a></td><td>Converts the content of a section in <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins
            at <span class="parameter">startIndex</span> and includes <span class="parameter">count</span> characters
            to lowercase using the rules of the invariant culture.</td></tr><tr><td><a href="45340591-1c5c-aa8e-7d5d-211e6ea071ea.htm">ToUpperInvariant(StringBuilder)</a></td><td>Converts the entire content of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> to uppercase
            letters using the rules of the invariant culture.</td></tr><tr><td><a href="694ab795-ccd1-8ec1-4c20-3781f0acfe81.htm">ToUpperInvariant(StringBuilder, Int32)</a></td><td>Converts the content of a <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> starting with <span class="parameter">startIndex</span> into uppercase letters and uses the rules of the invariant culture.</td></tr><tr><td><a href="5b0a9fda-4e04-35c0-f906-c4b4c2f370fc.htm">ToUpperInvariant(StringBuilder, Int32, Int32)</a></td><td>Converts the content of a section in <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a> that begins
            at <span class="parameter">startIndex</span> and includes <span class="parameter">count</span> characters
            to uppercase using the rules of the invariant culture.</td></tr><tr><td><a href="c2ea97ad-ff76-61d0-25a9-afcdc3542537.htm">Trim(StringBuilder)</a></td><td>Removes all leading and trailing white-space characters from 
            <span class="parameter">builder</span>.</td></tr><tr><td><a href="4bef356c-6520-4728-9493-09bb4b9bcc90.htm">Trim(StringBuilder, Char)</a></td><td>Removes all leading and trailing instances of a character from 
            <span class="parameter">builder</span>.</td></tr><tr><td><a href="aba71be9-ddd7-8e7e-2cd5-ec938587b188.htm">Trim(StringBuilder, <span id="LST997E13E1_24" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST997E13E1_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Removes all leading and trailing occurrences of a set of characters specified
            in an array from <span class="parameter">builder</span>.</td></tr><tr><td><a href="56e96302-416b-292b-e7d4-4e392715eb33.htm">Trim(StringBuilder, ReadOnlySpan<span id="LST997E13E1_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Removes all leading and trailing occurrences of a set of characters specified
            in a read-only span from <span class="parameter">builder</span>.</td></tr><tr><td><a href="728e2794-8dc2-e5da-501d-e9539acf8465.htm">TrimEnd(StringBuilder)</a></td><td>Removes all the trailing white-space characters from the <span class="parameter">builder</span>.
            </td></tr><tr><td><a href="8fdf5f92-c525-5113-4ca0-c041043fbcac.htm">TrimEnd(StringBuilder, Char)</a></td><td>Removes all the trailing white-space characters from <span class="parameter">builder</span>.
            </td></tr><tr><td><a href="b6f116a8-5be6-63bd-a31e-6a25061706e1.htm">TrimEnd(StringBuilder, <span id="LST997E13E1_28" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST997E13E1_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Removes all the trailing occurrences of a set of characters specified in
            an array from <span class="parameter">builder</span>.</td></tr><tr><td><a href="77fb3c68-d7c4-0825-60d3-e830cbea9aa2.htm">TrimEnd(StringBuilder, ReadOnlySpan<span id="LST997E13E1_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Removes all trailing occurrences of a set of characters specified in a read-only 
            span from <span class="parameter">builder</span>.</td></tr><tr><td><a href="c0880bdb-de0a-9777-114a-c8f7cca7ae7c.htm">TrimStart(StringBuilder)</a></td><td>Removes all the leading white-space characters from <span class="parameter">builder</span>.
            </td></tr><tr><td><a href="6d3e25bc-6264-eef6-4b52-d06c89a5666b.htm">TrimStart(StringBuilder, Char)</a></td><td>Removes all the leading occurrences of a specified character from 
            <span class="parameter">builder</span>.</td></tr><tr><td><a href="36bda591-54b7-ff78-bce7-71878b1aab62.htm">TrimStart(StringBuilder, <span id="LST997E13E1_32" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST997E13E1_33" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Removes all the leading occurrences of a set of characters specified in
            an array from <span class="parameter">builder</span>.</td></tr><tr><td><a href="b0cf527c-e191-ca0c-876c-ee1a334e2b22.htm">TrimStart(StringBuilder, ReadOnlySpan<span id="LST997E13E1_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST997E13E1_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Removes all leading occurrences of a set of characters specified in a read-only
            span from <span class="parameter">builder</span>.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Thread Safety</h2><div id="IDBCSection">Static members of this type are safe for multi-threaded operations. Instance members of this type are safe for multi-threaded operations. </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="776eae5c-b107-6615-5a5e-d18a3bcc0b99.htm">FolkerKinzel.Strings Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Thread Safety</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>