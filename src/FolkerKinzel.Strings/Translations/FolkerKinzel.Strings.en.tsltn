<?xml version="1.0" encoding="utf-8"?>
<Tsltn Version="1.0" SourceFile="..\bin\Release\netstandard2.0\de\FolkerKinzel.Strings.xml" SourceLanguage="de" TargetLanguage="en">
  <T ID="FB7C6BB26EEA39EB">Ordinal comparison of the characters.</T>
  <T ID="AA2EB5F98CF489A2">Ordinal comparison of the characters without taking upper and lower case into account.</T>
  <T ID="76722699059A0A21">Named constants to specify the type of hashcode for Char sequences.</T>
  <T ID="F856C6A42FFD6613">Only letters and decimal digits are hashed. The case is not considered.</T>
  <T ID="EA3E3127DED2B06F">Veraltet.</T>
  <T ID="338D6113DED2B06F">Veraltet.</T>
  <T ID="AB2EAAD12D2816FE"></T>
  <T ID="4898A5882D2816FE"></T>
  <T ID="F8E23B082D2816FE"></T>
  <T ID="96FB29A10F779F56">The Char sequence to be hashed.</T>
  <T ID="7DAFA9EFE0331BDC">The kind of hashcode to be generated.</T>
  <T ID="CCE2360C4C32CA81">The hashcode.</T>
  <T ID="51F91115DFB8F2B5">&lt;paramref name ="hashType"/&gt; is not a defined value of the &lt;see cref ="T:FolkerKinzel.Strings.HashType"/&gt; enum.</T>
  <T ID="F1462E3B37A3D245">&lt;code/&gt;</T>
  <T ID="B941BE017203A6AB">Extension methods for the &lt;see cref ="T:System.Text.StringBuilder"/&gt; class.</T>
  <T ID="7D1984B2DED2B06F">Veraltet.</T>
  <T ID="E02F057C2D2816FE"></T>
  <T ID="2DE54422D2816FE"></T>
  <T ID="CA1788272D2816FE"></T>
  <T ID="30D6FCD80F779F56">The Char sequence to be hashed.</T>
  <T ID="4CB486F7E0331BDC">The kind of hashcode to be generated.</T>
  <T ID="F15F7AF14C32CA81">The hashcode.</T>
  <T ID="6576367D6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="B2C3CF1FDFB8F2B5">&lt;paramref name ="hashType"/&gt; is not a defined value of the &lt;see cref ="T:FolkerKinzel.Strings.HashType"/&gt; enum.</T>
  <T ID="8870939037A3D245">&lt;code/&gt;</T>
  <T ID="F8A7595EA52FCA44">Removes all the trailing white-space characters from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="46B4380B3A9E4862"></T>
  <T ID="E9D9494687FCA7D1"></T>
  <T ID="3FE91F0C333693A"></T>
  <T ID="D26919B1D99BBAFD"></T>
  <T ID="AB7FA8DEA046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="3688D23B0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="8402B7906D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="7FBD155B59DC67F4">Removes all the trailing white-space characters from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="AEB23892A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="A078DE5D65452DD8">A Unicode character to remove.</T>
  <T ID="35E5193A0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="51CF82E06D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="99F5F69EC689D86A">Removes all the trailing occurrences of a set of characters specified in an array from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="70911F81A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="1C20142910F6833A">An array of Unicode characters to remove, or &lt;c&gt;null&lt;/c&gt;. If &lt;paramref name="trimChars"/&gt; is &lt;c&gt;null&lt;/c&gt; or an empty array, Unicode white-space characters are removed instead.</T>
  <T ID="59E18EFD0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="A9DCF5896D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="248A0EEA0094FD0C">Removes all the leading white-space characters from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="8D364B07A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="1B746DD0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="DDC06E1F6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="5F9F8063898FAC48">Removes all the leading occurrences of a specified character from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="92909D68A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="3F5B0B6B65452DD8">The Unicode character to remove.</T>
  <T ID="85BEFF920A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="4D71CCFD6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C540A7F9F80C029D">Removes all the leading occurrences of a set of characters specified in an array from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="EA7E2E4FA046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="BE5FDF0F10F6833A">An array of Unicode characters to remove, or &lt;c&gt;null&lt;/c&gt;. If &lt;paramref name="trimChars"/&gt; is &lt;c&gt;null&lt;/c&gt; or an empty array, Unicode white-space characters are removed instead.</T>
  <T ID="56EDD2460A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="102E054C6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="99D31CC008256086">Removes all leading and trailing white-space characters from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="BE1E819FA046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="E2B9B3A30A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="2B1B9DC36D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="5404CFB6084FB38A">Removes all leading and trailing instances of a character from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="98C7CB75A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="BD40420C65452DD8">A Unicode character to remove.</T>
  <T ID="DAA652CB0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="8BED850A6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="BF442E6C1F402D9A">Removes all leading and trailing occurrences of a set of characters specified in an array from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="B00E5319A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="8C9D3FC410F6833A">An array of Unicode characters to remove, or &lt;c&gt;null&lt;/c&gt;. If &lt;paramref name="trimChars"/&gt; is &lt;c&gt;null&lt;/c&gt; or an empty array, Unicode white-space characters are removed instead.</T>
  <T ID="6A871FCD0A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="5F2955556D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="DCE9989FFE160FD1">Extension methods for the &lt;see cref ="T:System.String"/&gt; class.</T>
  <T ID="E3E1ED8BDED2B06F">Veraltet.</T>
  <T ID="7208BA582D2816FE"></T>
  <T ID="57CB34952D2816FE"></T>
  <T ID="B03A8A262D2816FE"></T>
  <T ID="B130AC300F779F56">The Char sequence to be hashed.</T>
  <T ID="AE3BD737E0331BDC">The kind of hashcode to be generated.</T>
  <T ID="B84FCBF04C32CA81">The hashcode.</T>
  <T ID="4CA0831CE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="5A593F2FDFB8F2B5">&lt;paramref name ="hashType"/&gt; is not a defined value of the &lt;see cref ="T:FolkerKinzel.Strings.HashType"/&gt; enum.</T>
  <T ID="B90E08F937A3D245">&lt;code/&gt;</T>
  <T ID="6D98BB33AAE238A6">Extension methods for the &lt;see cref ="T:System.ReadOnlySpan`1"&gt;ReadOnlySpan&amp;lt;Char&amp;gt;&lt;/see&gt; structure.</T>
  <T ID="50E7C187EC9C6214">Generates the same &lt;see cref ="T:System.Int32"/&gt; hash code for an identical string of characters each time the program is run.</T>
  <T ID="D678935472B204F9">&lt;para&gt;
The method &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; returns a different hash code for an identical string with each program run for security reasons. Apart from the fact that the hash algorithm of &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; could be different in different framework versions, it makes no sense to use the return value of &lt;see cref ="M:System.String.GetHashCode"/&gt; for reuse. The alternatives, e.g. &lt;see cref ="T:System.Security.Cryptography.MD5"/&gt; or &lt;see cref ="T:System.Security.Cryptography.SHA256"/&gt;, use more storage space and are slower. This method offers a slim alternative that is suitable for hashing very short strings that are not used in a security-critical context.
&lt;/para&gt;
&lt;para&gt;
The hashcode generated by this method is not identical to the hashcode generated by the .NET Framework 4.0, because it uses roundshifting to preserve more information.
&lt;/para&gt;
&lt;para&gt;
The hashcodes generated with different values for &lt;paramref name ="hashType"/&gt; may provide different hashcodes for an identical Char sequence and MUST therefore not be mixed.
&lt;/para&gt;
&lt;para&gt;
Do not use the hashcodes generated by this method for security-critical purposes (such as hashing passwords)!
&lt;/para&gt;</T>
  <T ID="D857796EC9C6214">Generates the same &lt;see cref ="T:System.Int32"/&gt; hash code for an identical string of characters each time the program is run.</T>
  <T ID="E6BF2BFB72B204F9">&lt;para&gt;
The method &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; returns a different hash code for an identical string with each program run for security reasons. Apart from the fact that the hash algorithm of &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; could be different in different framework versions, it makes no sense to use the return value of &lt;see cref ="M:System.String.GetHashCode"/&gt; for reuse. The alternatives, e.g. &lt;see cref ="T:System.Security.Cryptography.MD5"/&gt; or &lt;see cref ="T:System.Security.Cryptography.SHA256"/&gt;, use more storage space and are slower. This method offers a slim alternative that is suitable for hashing very short strings that are not used in a security-critical context.
&lt;/para&gt;
&lt;para&gt;
The hashcode generated by this method is not identical to the hashcode generated by the .NET Framework 4.0, because it uses roundshifting to preserve more information.
&lt;/para&gt;
&lt;para&gt;
The hashcodes generated with different values for &lt;paramref name ="hashType"/&gt; may provide different hashcodes for an identical Char sequence and MUST therefore not be mixed.
&lt;/para&gt;
&lt;para&gt;
Do not use the hashcodes generated by this method for security-critical purposes (such as hashing passwords)!
&lt;/para&gt;</T>
  <T ID="E8C92C55EC9C6214">Generates the same &lt;see cref ="T:System.Int32"/&gt; hash code for an identical string of characters each time the program is run.</T>
  <T ID="809D8B5E72B204F9">&lt;para&gt;
The method &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; returns a different hash code for an identical string with each program run for security reasons. Apart from the fact that the hash algorithm of &lt;see cref ="M:System.String.GetHashCode"&gt;String.GetHashCode()&lt;/see&gt; could be different in different framework versions, it makes no sense to use the return value of &lt;see cref ="M:System.String.GetHashCode"/&gt; for reuse. The alternatives, e.g. &lt;see cref ="T:System.Security.Cryptography.MD5"/&gt; or &lt;see cref ="T:System.Security.Cryptography.SHA256"/&gt;, use more storage space and are slower. This method offers a slim alternative that is suitable for hashing very short strings that are not used in a security-critical context.
&lt;/para&gt;
&lt;para&gt;
The hashcode generated by this method is not identical to the hashcode generated by the .NET Framework 4.0, because it uses roundshifting to preserve more information.
&lt;/para&gt;
&lt;para&gt;
The hashcodes generated with different values for &lt;paramref name ="hashType"/&gt; may provide different hashcodes for an identical Char sequence and MUST therefore not be mixed.
&lt;/para&gt;
&lt;para&gt;
Do not use the hashcodes generated by this method for security-critical purposes (such as hashing passwords)!
&lt;/para&gt;</T>
  <T ID="DEFF13E5A0261A26"></T>
  <T ID="D3C47582C5C52371">Removes all trailing occurrences of a set of characters specified in a Span from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="AB0859BEA046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="460277B434415891">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="D7001890A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="182C61F56D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="80B0CA8159205F7D">Removes all leading occurrences of a set of characters specified in a Span from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="DE63FC9A046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="73C101DDD316FD41">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="56390CE40A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="176277CB6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="2C9170253372C08A">Removes all leading and trailing occurrences of a set of characters specified in a Span from the &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="880A28CBA046D2F0">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="78D8860434415891">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="94465F260A4E719D">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="DA9DB3A76D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="EBF090C27F156EC4">Generates a &lt;see cref ="T:System.String"/&gt; from which all leading and trailing occurrences of the characters in the specified Span are removed.</T>
  <T ID="957D5E6D84768AA6">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="38C2210334415891">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="A5F2647729DA420">The resulting string after removing all characters passed in the &lt;paramref name ="trimChars"/&gt; parameter from the beginning and end of the string.</T>
  <T ID="98D4467E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="4313C0B292283509">Generates a &lt;see cref ="T:System.String"/&gt; from which all leading occurrences of the characters in the specified Span are removed.</T>
  <T ID="DC5D02D784768AA6">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="E56F25FE34415891">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="BC42D94578C55B42">The resulting string after removing all characters passed in the &lt;paramref name ="trimChars"/&gt; parameter from the beginning of the string.</T>
  <T ID="7DED8B90E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="47C51EFF6DCE19A">Generates a &lt;see cref ="T:System.String"/&gt; from which all trailing occurrences of the characters in the specified Span are removed.</T>
  <T ID="DC1EB33484768AA6">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="E69729F934415891">A Span of Unicode characters to remove. If &lt;paramref name="trimChars"/&gt; is an empty Span, Unicode white-space characters are removed instead.</T>
  <T ID="E6344BCCCA2B1873">The resulting string after removing all characters passed in the &lt;paramref name ="trimChars"/&gt; parameter from the end of the string.</T>
  <T ID="DD3698CAE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="5574B60B0AF7B8C1">Extension methods for the &lt;see cref="T:System.ReadOnlyMemory`1"&gt;ReadOnlyMemory&amp;lt;Char&amp;gt;&lt;/see&gt; structure, which are used in .NET Framework 4.5, .NET Standard 2.0 and  .NET Standard 2.1 as polyfills for methods from current .NET versions.</T>
  <T ID="8D8056A8A454632A">The methods of this class should only be used in the extension method syntax to simulate the methods of the &lt;see cref="T:System.ReadOnlyMemory`1"&gt;ReadOnlyMemory&amp;lt;Char&amp;gt;&lt;/see&gt; structure, which exist in more modern frameworks.</T>
  <T ID="FA6179F76FE6F9E4">Extension methods for the &lt;see cref="T:System.ReadOnlySpan`1"&gt;ReadOnlySpan&amp;lt;Char&amp;gt;&lt;/see&gt; structure, which are used in .NET Framework 4.5, .NET Standard 2.0 and  .NET Standard 2.1 as polyfills for methods from current .NET versions.</T>
  <T ID="AE6D841A662971F3">The methods of this class should only be used in the extension method syntax to simulate the methods of the &lt;see cref="T:System.ReadOnlySpan`1"&gt;ReadOnlySpan&amp;lt;Char&amp;gt;&lt;/see&gt; structure, which exist in more modern frameworks.</T>
  <T ID="5724914FC6DCBCB1">The span to search.</T>
  <T ID="460EC51CD05DB862">The Unicode character to search for.</T>
  <T ID="9E06C7CE0AB9F496">&lt;c&gt;true&lt;/c&gt; if found, &lt;c&gt;false&lt;/c&gt; otherwise.</T>
  <T ID="63EBBC6CF57B4768">Available for .NET Framework 4.5, .NET Standard 2.0 and .NET Standard 2.1.</T>
  <T ID="3D17DB82051501E3">Extension methods for the &lt;see cref="T:System.Text.StringBuilder"/&gt; class, which are used in .NET Framework 4.5 and .NET Standard 2.0 as polyfills for methods from current .NET versions.</T>
  <T ID="65262C850AF980DB">The methods of this class should only be used in the extension method syntax to simulate the original methods of the &lt;see cref ="T:System.String"/&gt; class, which exist in more modern frameworks. To match the behavior of the original methods, these extension methods throw a &lt;see cref ="T:System.NullReferenceException"/&gt; when called on &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="436CA61750520FA">Appends the string representation of a specified read-only character span to a &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="92F8BC115DBE6F9F">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to which the characters are appended.</T>
  <T ID="477AF3C760E68253">The read-only character span to append.</T>
  <T ID="9A37AD4E72DE8164">A reference to &lt;paramref name="builder"/&gt; after the append operation is completed.</T>
  <T ID="5C53678426F8EFE0">Extension methods for the &lt;see cref ="T:System.String"/&gt; class, which are used in .NET Framework 4.5 and .NET Standard 2.0 as polyfills for methods from current .NET versions.</T>
  <T ID="E4E3B0759A2D3774">To match the behavior of the original methods, these extension methods throw a &lt;see cref ="T:System.NullReferenceException"/&gt; when called on a &lt;c&gt;null&lt;/c&gt; string.</T>
  <T ID="A568FFF6F7A24265">Returns a value indicating whether a specified character occurs within this string, using the specified comparison rules.</T>
  <T ID="3B8DA89316154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="1B5BACF21802B031">The Unicode character to search for.</T>
  <T ID="BD3512D7C31686F0">One of the enumeration values that specifies the rules to use in the comparison.</T>
  <T ID="D99D375573CA557">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="value"/&gt; has been found, &lt;c&gt;false&lt;/c&gt; otherwise.</T>
  <T ID="82EFC2EBE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="957C11C02140445F">&lt;paramref name="comparisonType"/&gt; is not a defined value of the &lt;see cref="T:System.StringComparison"/&gt; enum.</T>
  <T ID="510D3F37F468118F">Returns a value indicating whether a specified character appears in the string.</T>
  <T ID="DFA197D016154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="A9A0B2711802B031">The Unicode character to search for.</T>
  <T ID="BA054F50573CA557">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="value"/&gt; has been found, &lt;c&gt;false&lt;/c&gt; otherwise.</T>
  <T ID="F9C42ADDE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="CBE2D2A8011B8422">Reports the zero-based index of the first occurrence of the specified Unicode character in this &lt;see cref="T:System.String"/&gt;. A parameter specifies the type of search to use for the specified character.</T>
  <T ID="ACF4039116154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="5F8074931802B031">The Unicode character to search for.</T>
  <T ID="1849E63F42F9B8ED">An enumeration value that specifies the rules for the search.</T>
  <T ID="C2ABC273EAEAC904">The zero-based index of &lt;paramref name="value"/&gt; if that character is found, or -1 if it is not.</T>
  <T ID="8702947AE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="344842782140445F">&lt;paramref name="comparisonType"/&gt; is not a defined value of the &lt;see cref="T:System.StringComparison"/&gt; enum.</T>
  <T ID="CC9600AAC9E6C1C">The method performs an ordinal character comparison.</T>
  <T ID="2C6AE194C11343A3">Splits a &lt;see cref="T:System.String"/&gt; into substrings based on a specified delimiting character and, optionally, options.</T>
  <T ID="6194812F452EF894">The &lt;see cref="T:System.String"/&gt; to split.</T>
  <T ID="8D8B61D1A7A536B">A character that delimits the substrings in &lt;paramref name="s"/&gt;.</T>
  <T ID="B9B3A6156C70A1C5">An enumeration value that specifies whether to include empty substrings.</T>
  <T ID="41A2A02588432DFE">An array whose elements contain the substrings from &lt;paramref name="s"/&gt; that are delimited by &lt;paramref name="separator"/&gt;.</T>
  <T ID="83D6FB81E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="F8DB8E235F754AB7">Splits a string into a maximum number of substrings based on the provided character separator, optionally omitting empty substrings from the result.</T>
  <T ID="75C162E8452EF894">The &lt;see cref="T:System.String"/&gt; to split.</T>
  <T ID="9C86D85E1A7A536B">A character that delimits the substrings in &lt;paramref name="s"/&gt;.</T>
  <T ID="A7CB4C5442C71C1">The maximum number of elements expected in the array.</T>
  <T ID="6F7769C96C70A1C5">An enumeration value that specifies whether to include empty substrings.</T>
  <T ID="3AFEC716F98AC788">An array that contains at most &lt;paramref name="count"/&gt; substrings from &lt;paramref name="s"/&gt; that are delimited by &lt;paramref name="separator"/&gt;.</T>
  <T ID="5069852EE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="EC6B04FA39BDAA36">Determines whether &lt;paramref name="s"/&gt; starts with the specified character.</T>
  <T ID="8E1BF60316154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="EF812EA909826F79">The Unicode character to compare.</T>
  <T ID="5F28F797631F1A74">&lt;c&gt;true&lt;/c&gt; if value matches the beginning of &lt;paramref name="s"/&gt;; otherwise, &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="5488A99BC76D072E">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</T>
  <T ID="612C8712E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="B1ECEA32C7CADE05">Determines whether the end of &lt;paramref name="s"/&gt; matches the specified character.</T>
  <T ID="84792E6516154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="33C00F7D09826F79">The Unicode character to compare.</T>
  <T ID="62A7A18FDA265821">&lt;c&gt;true&lt;/c&gt; if value matches the end of &lt;paramref name="s"/&gt;; otherwise, &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="BF61AE8FC76D072E">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</T>
  <T ID="B8E1B02DE78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="81DD9BF96F64B82B">Removes all leading and trailing whitespace characters from a read-only character memory region.</T>
  <T ID="21649B15174CF69E">The source memory from which the characters are removed.</T>
  <T ID="E60979AA88174DE5">The trimmed character memory region.</T>
  <T ID="7EB677A0ED12E88">Removes all leading whitespace characters from a read-only character memory region.</T>
  <T ID="59B4F4DB174CF69E">The source memory from which the characters are removed.</T>
  <T ID="3C33636388174DE5">The trimmed character memory region.</T>
  <T ID="F2A25B70E3A61BF0">Removes all trailing whitespace characters from a read-only character memory region.</T>
  <T ID="E7EA3B7E174CF69E">The source memory from which the characters are removed.</T>
  <T ID="B18055988174DE5">The trimmed character memory region.</T>
  <T ID="2B3D2BA9BD898E33">Extension methods for the &lt;see cref="T:System.Char"/&gt; structure.</T>
  <T ID="A0B36B36F3E748A">Indicates whether a specified Unicode character is part of the ASCII character set.</T>
  <T ID="C60530F0F644E52B">The Unicode character to examine.</T>
  <T ID="407B5B4035B87AD">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="c"/&gt; is part of the ASCII character set; otherwise, &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="396C2EFF530CDCA9">Examines whether the read-only character span contains Unicode characters that do not belong to the ASCII character set.</T>
  <T ID="503263B02D607937">A read-only span of Unicode characters.</T>
  <T ID="C718E59C62796E35">&lt;c&gt;false&lt;/c&gt; if &lt;paramref name="span"/&gt; contains a Unicode character, which doesn't belong to the ASCII character set; otherwise, &lt;c&gt;true&lt;/c&gt;.</T>
  <T ID="839C46D9668FEC18">Converts a &lt;see cref ="T:System.String"/&gt;, which represents an identifier for a character set, into an instance of the &lt;see cref ="T:System.Text.Encoding"/&gt; class.</T>
  <T ID="C59DB433F34E5D19">An &lt;see cref ="T:System.Text.Encoding"/&gt; object that matches the specified identifier of the character set or &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt; if no match was found .</T>
  <T ID="8DEBBCBBF3F8F8B2">.NET Standard and .NET 5.0 recognize by default only a small number of character sets. The method overrides this default setting.</T>
  <T ID="4C18D39F42ED3121">Examines whether the &lt;see cref="T:System.Text.StringBuilder"/&gt; contains Unicode characters that do not belong to the ASCII character set.</T>
  <T ID="38C97D74965635FC">The &lt;see cref="T:System.Text.StringBuilder"/&gt;, whose content is examined.</T>
  <T ID="F75F361AD334FDB5">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="builder"/&gt; contains a Unicode character, which doesn't belong to the ASCII character set; otherwise, &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="5A47E9526D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="A5BD657353A93461">Examines whether the &lt;see cref="T:System.String"/&gt; contains Unicode characters that do not belong to the ASCII character set.</T>
  <T ID="4F4ACA50964D2DCB">A &lt;see cref="T:System.String"/&gt; or &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C430D164016077C1">&lt;c&gt;false&lt;/c&gt; if &lt;paramref name="s"/&gt; contains a Unicode character, which doesn't belong to the ASCII character set; otherwise, &lt;c&gt;true&lt;/c&gt;.</T>
  <T ID="A51CA3CD024D224C">Indicates whether a read-only span of Unicode characters contains one of the Unicode characters that are passed to the method in another span.</T>
  <T ID="2E498B3EBC26D7E7">The span to search.</T>
  <T ID="7D88BF43F461E679">Returns the length that the read-only span would have without trailing whitespace.</T>
  <T ID="7BF3D8435F806C06">The read-only span of Unicode characters to examine.</T>
  <T ID="CC74332C09C5BAC8">The length that the read-only span would have without trailing whitespace.</T>
  <T ID="287C3E07E090647B">Returns the index of the first non-whitespace character in the span.</T>
  <T ID="FDC3F1745F806C06">The read-only span of Unicode characters to examine.</T>
  <T ID="48B7D1C1BF2C2C2">The index of the first non-whitespace character found in the span. If the span is empty or consists only of whitespace, the length of the span is returned.</T>
  <T ID="DA2A8B393CC5A3D2">Examines a section of the &lt;see cref ="T:System.Text.StringBuilder"/&gt; that begins at &lt;paramref name ="startIndex"/&gt; to see whether it contains Unicode characters that do not belong to the ASCII character set .</T>
  <T ID="E1D30702965635FC">The &lt;see cref="T:System.Text.StringBuilder"/&gt; whose content is examined.</T>
  <T ID="ADB25B63481F4334">The zero-based index in &lt;paramref name ="builder"/&gt; at which the examination begins.</T>
  <T ID="5FF3C6948E30EDA9">&lt;c&gt;true&lt;/c&gt; if the section in &lt;paramref name ="builder"/&gt; contains a Unicode character that does not belong to the ASCII character set, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="F83103ED6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="F5D3C03A09F1669F">&lt;paramref name ="startIndex"/&gt; is less than 0 or greater than the number of characters in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="E99B76CF965635FC">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is examined.</T>
  <T ID="E83263FE481F4334">The zero-based index in &lt;paramref name ="builder"/&gt; at which the examination begins.</T>
  <T ID="197E22A98E30EDA9">&lt;c&gt;true&lt;/c&gt; if the examined section in &lt;paramref name="builder"/&gt; contains a Unicode character, which doesn't belong to the ASCII character set, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="3A82FDC76D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C29D3A4A8B0A9172">Converts the entire content of a &lt;see cref ="T:System.Text.StringBuilder"/&gt; to lowercase letters using the rules of the invariant culture.</T>
  <T ID="DA30D1B954973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="9BE860300D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="FDE362E86D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="91FE5F43668B603A">Converts the content of a &lt;see cref ="T:System.Text.StringBuilder"/&gt; starting with &lt;paramref name="startIndex"/&gt; into lowercase letters and uses the rules of the invariant culture.</T>
  <T ID="D026900154973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="14DEA9FD93DD5229">The zero-based index in &lt;paramref name ="builder"/&gt; at which the conversion starts.</T>
  <T ID="D16F962800D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="19DA98176D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="A3CC112109F1669F">&lt;paramref name ="startIndex"/&gt; is less than 0 or greater than the number of characters in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="63FA81F54973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="C3E2B11C93DD5229">The zero-based index in &lt;paramref name ="builder"/&gt; at which the conversion starts.</T>
  <T ID="69902E3E00D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="196339556D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="D1D9EAC058388D6E">Converts the entire content of a &lt;see cref ="T:System.Text.StringBuilder"/&gt; to uppercase letters using the rules of the invariant culture.</T>
  <T ID="60B7379954973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="F0B7439D00D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="1CAA34616D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="EF167B7AB61C4C91">Converts the content of a &lt;see cref ="T:System.Text.StringBuilder"/&gt; starting with &lt;paramref name="startIndex"/&gt; into uppercase letters and uses the rules of the invariant culture.</T>
  <T ID="2A4BF2B754973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="8E967F6193DD5229">The zero-based index in &lt;paramref name ="builder"/&gt; at which the conversion starts.</T>
  <T ID="AF69583F00D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="2AFA50D76D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="8248492F09F1669F">&lt;paramref name ="startIndex"/&gt; is less than 0 or greater than the number of characters in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="76A66A4A54973274">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; whose content is changed.</T>
  <T ID="F79BE99393DD5229">The zero-based index in &lt;paramref name ="builder"/&gt; at which the conversion starts.</T>
  <T ID="133A96E200D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="1A264E6F6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="1B39527827AF4F9A">Appends a copy of a sequence of Unicode characters that comes from a &lt;see cref ="T:System.Text.StringBuilder"/&gt; to the existing content of &lt;paramref name ="builder"/&gt;.</T>
  <T ID="5D129192FDCAD05B">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to which the characters are appended.</T>
  <T ID="A01B4D3C7F8BCCD4">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; from which the characters are copied.</T>
  <T ID="D3EFE6B572C2B8ED">The zero-based index in &lt;paramref name="value"/&gt; at which the copy operation starts.</T>
  <T ID="6136E7A291C2A4EC">The number of Unicode characters to copy.</T>
  <T ID="1B3BB23300D33280">A reference to &lt;paramref name ="builder"/&gt;.</T>
  <T ID="B3D324986D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="DBC06C490F3BADC2">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="value"/&gt;.
&lt;/para&gt;</T>
  <T ID="88DC33D5CE724E18">&lt;paramref name="value"/&gt; is &lt;c&gt;null&lt;/c&gt; and the values of &lt;paramref name="startIndex"/&gt; or &lt;paramref name="count"/&gt; are  greater than 0.</T>
  <T ID="E64B3EF06D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C0908ABFF13A4FB1">A read-only span, which contains the Unicode characters to search for.</T>
  <T ID="8C0F7844086BB66A">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="span"/&gt; contains one of the characters passed with &lt;paramref name="values"/&gt;. If &lt;paramref name="span"/&gt; or &lt;paramref name="chars"/&gt; are empty, &lt;c&gt;false&lt;/c&gt; is returned.</T>
  <T ID="65BA6487021DB4AA">Indicates whether a read-only character span contains one of the two characters that are passed to the method as arguments.</T>
  <T ID="812CEFD1BC26D7E7">The span to examine.</T>
  <T ID="F1D519E8621D3E8B">The first character to search for.</T>
  <T ID="F1D519E749D8BC06">The second character to search for.</T>
  <T ID="41DCF62698466F9C">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found in the span, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="1C954BB8D5D77B58">Indicates whether a read-only character span contains one of the 3 characters that are passed to the method as arguments.</T>
  <T ID="A59DD8E5BC26D7E7">The span to examine.</T>
  <T ID="512DC999621D3E8B">The first character to search for.</T>
  <T ID="512DC99A49D8BC06">The second character to search for.</T>
  <T ID="512DC997408D16FE">The third character to search for.</T>
  <T ID="791E862F98466F9C">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found in the span, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="4B2FCB8A7A6EC3CD">Indicates whether a read-only span of characters contains whitespace.</T>
  <T ID="4856BBF2C6DCBCB1">The span to search.</T>
  <T ID="40E00A58480F768">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="span"/&gt; contains whitespace, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="4759549B6962AF8F">&lt;see cref="M:System.Char.IsWhiteSpace(System.Char)"/&gt; is used for the comparison.</T>
  <T ID="AF273BE572917496">Searches for the zero-based index of the first occurrence of one of the specified Unicode characters.</T>
  <T ID="B29BCCEBBC26D7E7">The span to examine.</T>
  <T ID="1C33D78AF13A4FB1">A read-only span, which contains the characters to search for.</T>
  <T ID="C756E8F904858F54">Searches for the zero-based index of the last occurrence of one of the specified Unicode characters.</T>
  <T ID="4D194CDDBC26D7E7">The span to examine.</T>
  <T ID="63B95D67F13A4FB1">A read-only span, which contains the characters to search for.</T>
  <T ID="FA16644F2E19B71D">Indicates whether a specified Unicode character is found in a &lt;see cref="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="7EF1CD8472CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="E1829DAE1802B031">The Unicode character to search for.</T>
  <T ID="86B95CEE23084C43">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="value"/&gt; has been found, &lt;c&gt;false&lt;/c&gt; otherwise.</T>
  <T ID="9C12D1AA6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="FE40EB246CB39D9E">Examines a section of the &lt;see cref ="T:System.Text.StringBuilder"/&gt; that begins at &lt;paramref name ="startIndex"/&gt; and includes &lt;paramref name ="count"/&gt; characters to determine whether this Section contains Unicode characters that do not belong to the ASCII character set.</T>
  <T ID="4B2762A497929986">The length of the section to examine.</T>
  <T ID="EA30DAE26BCC0FF0">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0 or larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;</T>
  <T ID="DF7BC3070A3F17EA">Specifies the zero-based index of the first occurrence of the specified character in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="A40DD81572CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="C0AF4869D05DB862">The Unicode character to search for.</T>
  <T ID="F321A32E9895D30F">The zero-based index position of &lt;paramref name ="value"/&gt; from the beginning of the &lt;see cref ="T:System.Text.StringBuilder"/&gt;, if this character was found, otherwise -1.</T>
  <T ID="D8E3503A6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="1B63357AB64D72A2">Returns the zero-based index of the first occurrence of the specified character in &lt;paramref name ="builder"/&gt;. The search starts at the specified index.</T>
  <T ID="CB88434472CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="46EA744DD05DB862">The Unicode character to search for.</T>
  <T ID="143508666F81ABC0">The start index of the search.</T>
  <T ID="3FD25F8B9895D30F">The zero-based index of &lt;paramref name="value"/&gt; if that character is found, or -1 if it's not.</T>
  <T ID="2D730E856D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="4445655109F1669F">&lt;paramref name ="startIndex"/&gt; is less than 0 or greater than the number of characters in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="D8EFB175D4CE5FE5">Returns the zero-based index of the first occurrence of the specified character in &lt;paramref name ="builder"/&gt;. The search begins at a specified index and a specified number of character positions are checked.</T>
  <T ID="DB8FF68272CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="E68A20D6D05DB862">The Unicode character to search for.</T>
  <T ID="344154386F81ABC0">The start index of the search.</T>
  <T ID="D6725888D1BD11B9">The number of characters positions to examine.</T>
  <T ID="94B088729895D30F">The zero-based index position of &lt;paramref name ="value"/&gt; from the beginning of the &lt;see cref ="T:System.Text.StringBuilder"/&gt;, if this character was found, otherwise -1.</T>
  <T ID="71564C226D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C4CEA5326BCC0FF0">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0 or larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;</T>
  <T ID="6D51904138491761">Returns the zero-based index of the last occurrence of the specified character in &lt;paramref name ="builder"/&gt;.</T>
  <T ID="D4B74B9872CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="61AA44D7D05DB862">The Unicode character to search for.</T>
  <T ID="8718D67480D24442">The zero-based index of the last occurrence of &lt;paramref name="value"/&gt; if this character has been found, otherwise -1.</T>
  <T ID="A2B066536D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="17F290E257F4DFBD">Returns the zero-based index of the last occurrence of the specified character in &lt;paramref name ="builder"/&gt;. The search begins at a specified character position and runs backwards to the beginning of the &lt;see cref ="T:System.Text.StringBuilder"/&gt;.</T>
  <T ID="307A803D72CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="EC563447D05DB862">The Unicode character to search for.</T>
  <T ID="D5E165FA16EB57B2">The start index of the search. The search is done backwards to the beginning of &lt;paramref name ="builder"/&gt;.</T>
  <T ID="D8747E7980D24442">The zero-based index of the last occurence of &lt;paramref name="value"/&gt; if that character is found, or -1 if it's not.</T>
  <T ID="4A2CD61F6D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="D6A7D86B71494C80">&lt;paramref name ="builder"/&gt; is not empty and &lt;paramref name ="startIndex"/&gt; is less than 0 or greater than or equal to the length of &lt;paramref name ="builder"/&gt;.</T>
  <T ID="320F091B3085A4A1">Specifies the zero-based index of the last occurrence of the specified character in &lt;paramref name ="builder"/&gt;. The search begins at a specified index and runs backwards for a specified number of character positions to the beginning of the &lt;see cref ="T:System.Text.StringBuilder"/&gt; s.</T>
  <T ID="A67D3DB972CA29FF">The &lt;see cref ="T:System.Text.StringBuilder"/&gt; to search.</T>
  <T ID="C45AFF5BD05DB862">The Unicode character to search for.</T>
  <T ID="F2EBE0C616EB57B2">The start index of the search. The search is done backwards to the beginning of &lt;paramref name ="builder"/&gt;.</T>
  <T ID="FCBB96BFD1BD11B9">The number of characters positions to examine.</T>
  <T ID="414D384CD1A55639">If &lt;paramref name ="value"/&gt; was found, the zero-based index position of its last occurrence within the section to be searched, otherwise -1.</T>
  <T ID="B4F509806D12D017">&lt;paramref name="builder"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="985466FC32A4F9F6">&lt;para&gt;
&lt;paramref name ="builder"/&gt; is not empty and &lt;paramref name ="startIndex"/&gt; is less than 0 or greater than or equal to the length of &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="builder"/&gt; is not empty and &lt;paramref name ="startIndex"/&gt; - &lt;paramref name ="count"/&gt; + 1 is less than 0.
&lt;/para&gt;</T>
  <T ID="B6CCB25898F7A73">Converts the content of a section in &lt;see cref ="T:System.Text.StringBuilder"/&gt; that begins at &lt;paramref name ="startIndex"/&gt; and includes &lt;paramref name ="count"/&gt; characters to lower case using the rules of the invariant culture.</T>
  <T ID="A4E1CB52B628C443">The number of characters to convert.</T>
  <T ID="C4DD40176BCC0FF0">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0 or larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;</T>
  <T ID="99DDA6EFDF803CB8">Converts the content of a section in &lt;see cref ="T:System.Text.StringBuilder"/&gt; that begins at &lt;paramref name ="startIndex"/&gt; and includes &lt;paramref name ="count"/&gt; characters to upper case using the rules of the invariant culture.</T>
  <T ID="C9B3487FB628C443">The number of characters to convert.</T>
  <T ID="3C23FC2D6BCC0FF0">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0 or larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="builder"/&gt;.
&lt;/para&gt;</T>
  <T ID="682BA27AA265926D">Indicates whether a &lt;see cref="T:System.String"/&gt; contains one of the two characters that are passed to the method as arguments.</T>
  <T ID="FB6515516154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="8C698431621D3E8B">The first character to search for.</T>
  <T ID="E9C20F9649D8BC06">The second character to search for.</T>
  <T ID="B112EBFDE10DFC18">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="C58A1976E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="69F73C2D4E24CDF2">Indicates whether a &lt;see cref="T:System.String"/&gt; contains one of the 3 characters that are passed to the method as arguments.</T>
  <T ID="F8A550216154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="A579BA7621D3E8B">The first character to search for.</T>
  <T ID="ACFF104249D8BC06">The second character to search for.</T>
  <T ID="4FA684DD408D16FE">The third character to search for.</T>
  <T ID="75FF562EE10DFC18">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="4FFF58D2E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="38813B3AA83D96F5">Indicates whether a &lt;see cref="T:System.String"/&gt; contains one of the Unicode characters that are passed to the method in a read-only span.</T>
  <T ID="F345A92B16154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="A799C379F13A4FB1">A read-only span, which contains the characters to search for.</T>
  <T ID="E291E14596430F1E">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found in &lt;paramref name ="s"/&gt;, otherwise &lt;c&gt;false&lt;/c&gt;. If &lt;paramref name ="s"/&gt; or &lt;paramref name ="anyOf"/&gt; have the length 0, &lt;c&gt;false&lt;/c&gt; is returned.</T>
  <T ID="FEB9F356E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="DE379CC8FC4289E">Indicates whether a &lt;see cref="T:System.String"/&gt; contains one of the Unicode characters that are passed to the method as an array.</T>
  <T ID="5245DC1B16154BD0">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="3887C2A9CF5925EB">An array, which contains the characters to search for.</T>
  <T ID="478FD4A596430F1E">&lt;c&gt;true&lt;/c&gt; if one of the characters to be searched for is found in &lt;paramref name ="s"/&gt;, otherwise &lt;c&gt;false&lt;/c&gt;. If &lt;paramref name ="s"/&gt; or &lt;paramref name ="anyOf"/&gt; have the length 0, &lt;c&gt;false&lt;/c&gt; is returned.</T>
  <T ID="251F639587835164">Indicates whether a &lt;see cref="T:System.String"/&gt; contains whitespace.</T>
  <T ID="2722DD483752C23C">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="DE051C5A8D5AE427">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name="s"/&gt; contains whitespace, otherwise &lt;c&gt;false&lt;/c&gt;.</T>
  <T ID="B55EB7526962AF8F">&lt;see cref="M:System.Char.IsWhiteSpace(System.Char)"/&gt; is used for the comparison.</T>
  <T ID="BD834F86DAEBD0EB">Returns the zero-based index of the first occurrence of one of the the specified characters in &lt;paramref name="s"/&gt;. The search begins at a specified index and a specified number of character positions are checked.</T>
  <T ID="1719613F3752C23C">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="7598080F13A4FB1">A read-only span, which contains the characters to search for.</T>
  <T ID="9E5D9F6507A86DC">The zero-based index in &lt;paramref name="s"/&gt; at which the search starts.</T>
  <T ID="4F0DE1C621EF880">The number of characters positions to examine in &lt;paramref name="s"/&gt;.</T>
  <T ID="27866CBCD58CCA0B">&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; or &lt;paramref name ="count"/&gt; are smaller than 0
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="startIndex"/&gt; + &lt;paramref name ="count"/&gt; is larger than the number of characters in &lt;paramref name ="value"/&gt;.
&lt;/para&gt;</T>
  <T ID="B682EA6CB5245F66">If the length of &lt;paramref name ="values"/&gt; is less than 5, the method uses MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.IndexOfAny(System.Char[])"/&gt; is used to avoid performance issues.</T>
  <T ID="9E97041E37A2229A">MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, T, T)  is used for the comparison.</T>
  <T ID="DE4E5FB57862671F">MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, T, T, T)  is used for the comparison.</T>
  <T ID="6333C718E1C8334F">&lt;para&gt;
This specialization of the extension method MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the data type &lt;see cref ="T:System.Char"/&gt; is required to avoid performance problems.
&lt;/para&gt;
&lt;para&gt;
If the length of &lt;paramref name ="values"/&gt; is less than 5, the method uses MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.IndexOfAny(System.Char[])"/&gt; is used.
&lt;/para&gt;</T>
  <T ID="8A34684737A2229A">MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, T, T)  is used for the comparison.</T>
  <T ID="F300FAD27862671F">MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, T, T, T)  is used for the comparison.</T>
  <T ID="F227D0F583A3C6EB">If the length of &lt;paramref name ="anyOf"/&gt; is less than 5, the method uses MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.IndexOfAny(System.Char[])"/&gt; is used to avoid performance issues.</T>
  <T ID="D7549EF3B210A72">&lt;see cref="M:System.String.IndexOfAny(System.Char[])"/&gt; is used for the comparison.</T>
  <T ID="12013C7F83A3C6EB">If the length of &lt;paramref name ="anyOf"/&gt; is less than 5, the method uses MemoryExtensions.IndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.IndexOfAny(System.Char[])"/&gt; is used.</T>
  <T ID="4EF98652E9F3F6AE">&lt;para&gt;
This specialization of the extension method MemoryExtensions.LastIndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the data type &lt;see cref ="T:System.Char"/&gt; is required to avoid performance problems.
&lt;/para&gt;
&lt;para&gt;
If the length of &lt;paramref name ="values"/&gt; is less than 5, the method uses MemoryExtensions.LastIndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.LastIndexOfAny(System.Char[])"/&gt; is used.
&lt;/para&gt;</T>
  <T ID="26C533A9A9FD3A12">Returns the zero-based index position of the last occurrence of one of the specified characters in &lt;paramref name ="s"/&gt;. The search begins at a specified index and runs backwards to the beginning of the &lt;see cref="T:System.String"/&gt; for a specified number of character positions.</T>
  <T ID="66C240483752C23C">The &lt;see cref="T:System.String"/&gt; to search.</T>
  <T ID="F31E3E2FF13A4FB1">A read-only span, which contains the characters to search for.</T>
  <T ID="2ADFC168DC7FD944">The start index of the search. The search is done backwards to the beginning of &lt;paramref name="s"/&gt;.</T>
  <T ID="F31E26C7D1BD11B9">The number of characters positions to examine in &lt;paramref name="s"/&gt;.</T>
  <T ID="510B04F2FC8F020F">The zero-based index of the last occurrence of one of the specified Unicode characters in the specified part of &lt;paramref name="s"/&gt; or -1 if none of these characters have been found in this area.</T>
  <T ID="FD6E6302E78A6666">&lt;paramref name="s"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="AB9E0932FC7F3A48">&lt;para&gt;
&lt;paramref name="s"/&gt; is not &lt;see cref="F:System.String.Empty"/&gt; and &lt;paramref name ="startIndex"/&gt; is less than 0 or greater than or equal to the length of &lt;paramref name="s"/&gt;
&lt;/para&gt;
&lt;para&gt;
- or -
&lt;/para&gt;
&lt;para&gt;
&lt;paramref name ="s"/&gt; is not &lt;see cref="F:System.String.Empty"/&gt; and &lt;paramref name ="startIndex"/&gt; - &lt;paramref name ="count"/&gt; + 1 is less than 0.
&lt;/para&gt;</T>
  <T ID="AB91C762ED280B1A">If the length of &lt;paramref name ="anyOf"/&gt; is less than 5, the method uses MemoryExtensions.LastIndexOfAny&amp;lt;T&amp;gt;(ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) for the comparison. If the length of &lt;paramref name ="values"/&gt; is greater, &lt;see cref ="M:System.String.LastIndexOfAny(System.Char[])"/&gt; is used.</T>
  <T ID="4C72427440E13833">Returns a corresponding &lt;see cref ="T:System.Text.Encoding"/&gt; object for the identifier of a character set, for which &lt;see cref ="P:System.Text.Encoding.EncoderFallback"/&gt; and &lt;see cref ="P:System.Text.Encoding.DecoderFallback"/&gt; are set to ReplacementFallback. &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt; is the fallback value.</T>
  <T ID="ECDC42D292D37CE8">The identifier of a character set or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt;.</T>
  <T ID="F8599D52DC4DFDFC">Returns a corresponding &lt;see cref ="T:System.Text.Encoding"/&gt; object for the identifier of a charset whose properties &lt;see cref ="P:System.Text.Encoding.EncoderFallback"/&gt; and &lt;see cref ="P:System.Text.Encoding.DecoderFallback"/&gt; are set to the desired values.</T>
  <T ID="4EEBE81DCDCC7FF1">The identifier of a character set or &lt;c&gt;null&lt;/c&gt; for the UTF-8 character set.</T>
  <T ID="FE5B73FFA6183C9F">An &lt;see cref ="T:System.Text.Encoding"/&gt; object that corresponds to the specified identifier of the character set or a &lt;see cref ="T:System.Text.Encoding"/&gt; object for the UTF-8 character set if no match was found.</T>
  <T ID="EAEF3842664E392B">An object that provides an error handling mechanism if a &lt;see cref ="T:System.Byte"/&gt; sequence cannot be decoded with the &lt;see cref ="T:System.Text.Encoding"/&gt; object .</T>
  <T ID="669FFB31FB32DA50">An object that provides an error handling mechanism if a character cannot be encoded with the &lt;see cref ="T:System.Text.Encoding"/&gt; object.</T>
  <T ID="360DF399F3F8F8B2">.NET Standard and .NET 5.0 recognize by default only a small number of character sets. The method overrides this default setting.</T>
  <T ID="9F3BBD0CD460C28">Returns a corresponding &lt;see cref ="T:System.Text.Encoding"/&gt; object for the number of a code page, for which &lt;see cref ="P:System.Text.Encoding.EncoderFallback"/&gt; and &lt;see cref ="P:System.Text.Encoding.DecoderFallback"/&gt; are set to ReplacementFallback. &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt; is the fallback value.</T>
  <T ID="5D688E429095E2CF">The number of a code page or 0 for &lt;see cref ="P:System.Text.Encoding.Default"/&gt;.</T>
  <T ID="B2D6AC8322564CED">An &lt;see cref ="T:System.Text.Encoding"/&gt; object that matches the specified code page number or &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt; if no match was found .</T>
  <T ID="6B584085F3F8F8B2">.NET Standard and .NET 5.0 recognize by default only a small number of character sets. The method overrides this default setting.</T>
  <T ID="C16329ED73069721">Returns a corresponding &lt;see cref ="T:System.Text.Encoding"/&gt; object for the number of a code page whose properties &lt;see cref ="P:System.Text.Encoding.EncoderFallback"/&gt; and &lt;see cref ="P:System.Text.Encoding.DecoderFallback"/&gt; are set to the desired values.</T>
  <T ID="D5DBD6139095E2CF">The number of a code page or 0 for &lt;see cref ="P:System.Text.Encoding.Default"/&gt;.</T>
  <T ID="6AE3D2068470E98D">An &lt;see cref ="T:System.Text.Encoding"/&gt; object that corresponds to the specified code page number or a &lt;see cref ="T:System.Text.Encoding"/&gt; object for the UTF-8 character set if no match was found.</T>
  <T ID="8AC8D018664E392B">An object that provides an error handling mechanism if a &lt;see cref ="T:System.Byte"/&gt; sequence cannot be decoded with the &lt;see cref ="T:System.Text.Encoding"/&gt; object .</T>
  <T ID="53DC44CEF3F8F8B2">.NET Standard and .NET 5.0 recognize by default only a small number of character sets. The method overrides this default setting.</T>
  <T ID="7F062B0DFB32DA50">An object that provides an error handling mechanism if a &lt;see cref ="T:System.Byte"/&gt; sequence cannot be decoded with the &lt;see cref ="T:System.Text.Encoding"/&gt; object .</T>
  <T ID="BAB0884B2F6E8437">Indicates whether a specified Unicode character is found in a read-only span. MemoryExtensions.IndexOf(this ReadOnlySpan&amp;lt;T&amp;gt;, ReadOnlySpan&amp;lt;T&amp;gt;) is used for the comparison.</T>
  <T ID="27AF86687281E84E">The zero-based index of the first occurrence of one of the specified Unicode characters in &lt;paramref name="span"/&gt; or -1 if none of these characters have been found. If &lt;paramref name="values"/&gt; is an empty span, the method returns -1.</T>
  <T ID="B1157D6AA5222071">The zero-based index of the last occurrence of one of the specified Unicode characters in &lt;paramref name="span"/&gt; or -1 if none of these characters have been found. If &lt;paramref name="values"/&gt; is an empty span, the method returns -1.</T>
  <T ID="68487646E1E70044">The method performs an ordinal character comparison.</T>
  <T ID="A1355512E1E70044">The method performs an ordinal character comparison.</T>
  <T ID="6A461257E1E70044">The method performs an ordinal character comparison.</T>
  <T ID="F4130776E1E70044">The method performs an ordinal character comparison.</T>
  <T ID="74DA7D90E1E70044">The method performs an ordinal character comparison.</T>
  <T ID="68B1DEAFE1E70044">The method performs an ordinal character comparison.</T>
  <T ID="1D13892EE1E70044">The method performs an ordinal character comparison.</T>
  <T ID="D310B6D6A486D341">&lt;paramref name="s"/&gt; or &lt;paramref name="anyOf"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="49B3F6E55065EF89">The zero-based index of the first occurrence of one of the specified Unicode characters in &lt;paramref name="s"/&gt; or -1 if none of these characters have been found. If &lt;paramref name="anyOf"/&gt; is an empty span, the method returns -1.</T>
  <T ID="6EA193E8A486D341">&lt;paramref name="s"/&gt; or &lt;paramref name="anyOf"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
</Tsltn>